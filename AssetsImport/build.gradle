apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
mainClassName = System.properties.get('mainClassName', 'at.illumine.srb.utils.AssetsImport')

if (!hasProperty('mainClass')) {
    ext.mainClass = mainClassName
}

repositories {
    jcenter()
}


def jme3 = ["v" : "3.1.0-alpha2", "g": "org.jmonkeyengine"]
dependencies {
    compile "${jme3.g}:jme3-core:${jme3.v}"
    compile "${jme3.g}:jme3-blender:${jme3.v}"
    compile "${jme3.g}:jme3-plugins:${jme3.v}"
    runtime "${jme3.g}:jme3-desktop:${jme3.v}"
    runtime "${jme3.g}:jme3-lwjgl:${jme3.v}"
    
    runtime files("assets")        
    
    
    compile "commons-cli:commons-cli:1.3.1"
}

run {    
    if( project.hasProperty("appArgs") ) {
        args( Eval.me( appArgs ).tokenize(',') )
    }
}

task(debug, dependsOn: 'classes', type: JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    if( project.hasProperty("appArgs") ) {
        args( Eval.me( appArgs ).tokenize(',') )
    }
    debug true
}

task wrapper(type: Wrapper) {
}
